{"ast":null,"code":"import _slicedToArray from \"/Users/jgdharb/DevProjects/rocketSeat/airCnc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jgdharb/DevProjects/rocketSeat/airCnc/frontend/src/pages/Dashboard/index.js\";\nimport React, { useEffect, useState, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport socketio from 'socket.io-client';\nimport api from '../../services/api';\nimport './styles.css';\nexport default function Dashboard() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        spots = _useState2[0],\n        setSpots = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        requests = _useState4[0],\n        setRequests = _useState4[1];\n\n  const user_id = localStorage.getItem('user');\n  const socket = useMemo(() => socketio('http://localhost:3333', {\n    query: {\n      user_id\n    }\n  }), [user_id]);\n  useEffect(() => {\n    socket.on('booking_request', data => {\n      setRequests([...requests, data]);\n    });\n  }, [requests, socket]);\n  useEffect(() => {\n    async function loadSpots() {\n      const user_id = localStorage.getItem('user');\n      const response = await api.get('/dashboard', {\n        headers: {\n          user_id\n        }\n      });\n      setSpots(response.data); //console.log(response.data);\n    }\n\n    loadSpots();\n  }, []);\n\n  async function handleAccept(id) {\n    await api.post(\"/bookings/\".concat(id, \"/approvals\"));\n    setRequests(requests.filter(request => request._id !== id));\n  }\n\n  async function handleReject(id) {\n    await api.post(\"/bookings/\".concat(id, \"/rejections\"));\n    setRequests(requests.filter(request => request._id !== id));\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"ul\", {\n    className: \"notifications\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, requests.map(request => React.createElement(\"li\", {\n    key: request._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, request.user.email), \" est\\xE1 solicitando uma reserva em \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, request.spot.company), \" para a data: \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, request.spot.date)), React.createElement(\"button\", {\n    className: \"accept\",\n    onClick: () => handleAccept(request._id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"ACEITAR\"), React.createElement(\"button\", {\n    className: \"reject\",\n    onClick: () => handleReject(request._id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"REJEITAR\")))), React.createElement(\"ul\", {\n    className: \"spot-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, spots.map(spot => React.createElement(\"li\", {\n    key: spot._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    style: {\n      backgroundImage: \"url(\".concat(spot.thumbnail_url, \")\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, spot.company), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, spot.price ? \"R$\".concat(spot.price, \"/dia\") : 'GRATUITO')))), React.createElement(Link, {\n    to: \"/new\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Cadastrar novo spot\")));\n}","map":{"version":3,"sources":["/Users/jgdharb/DevProjects/rocketSeat/airCnc/frontend/src/pages/Dashboard/index.js"],"names":["React","useEffect","useState","useMemo","Link","socketio","api","Dashboard","spots","setSpots","requests","setRequests","user_id","localStorage","getItem","socket","query","on","data","loadSpots","response","get","headers","handleAccept","id","post","filter","request","_id","handleReject","map","user","email","spot","company","date","backgroundImage","thumbnail_url","price"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport socketio from 'socket.io-client';\nimport api from '../../services/api';\nimport './styles.css'\n\nexport default function Dashboard() {\n    const [spots, setSpots] = useState([]);\n    const [requests, setRequests] = useState([]);\n\n    const user_id = localStorage.getItem('user');\n    const socket = useMemo(() => \n        socketio('http://localhost:3333', {\n            query: { user_id },\n        }), [user_id]);\n\n    useEffect(() => {\n        socket.on('booking_request', data => {\n            setRequests([ ... requests, data])\n        });\n\n    }, [requests, socket]);\n\n    useEffect(() => {\n        async function loadSpots() {\n            const user_id = localStorage.getItem('user');\n            const response = await api.get('/dashboard', \n            { \n                headers: { user_id }\n             });\n    \n             setSpots(response.data);\n            //console.log(response.data);\n        }\n\n        loadSpots();\n    } , []);\n\n    async function handleAccept(id) {\n        await api.post(`/bookings/${id}/approvals`);\n\n        setRequests(requests.filter(request => request._id !== id));\n    }\n\n    async function handleReject(id) {\n        await api.post(`/bookings/${id}/rejections`);\n\n        setRequests(requests.filter(request => request._id !== id));\n    }\n\n    return (\n        <>\n            <ul className=\"notifications\" >\n                {requests.map(request => (\n                    <li key={request._id}>\n                        <p>\n                            <strong>{request.user.email}</strong> est√° solicitando uma reserva em <strong>{request.spot.company}</strong> para a data: <strong>{request.spot.date}</strong>\n                        </p>\n                        <button className=\"accept\" onClick={() => handleAccept(request._id)} >ACEITAR</button>\n                        <button className=\"reject\" onClick={() => handleReject(request._id)} >REJEITAR</button>\n                    </li>\n                ))}\n            </ul>\n            <ul className=\"spot-list\" >\n                {spots.map(spot => (\n                    <li key={spot._id}>\n                        <header style={{ backgroundImage: `url(${spot.thumbnail_url})` }}></header>\n                        <strong>{spot.company}</strong>\n                        <span>{spot.price ? `R$${spot.price}/dia` : 'GRATUITO'}</span>\n                    </li>\n                ))}\n            </ul>\n            <Link to=\"/new\" >\n                    <button className=\"btn\" >\n                        Cadastrar novo spot\n                    </button>\n            </Link>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}